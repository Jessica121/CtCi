package chapter2LL;

class linkedList {

linkedListNode head;//why this will solve pointer to head changes problem
	
	static class linkedListNode{		//static class?????
	linkedListNode next = null;
	int data;
	linkedListNode(int d){
		this.data = d;
	}
	}
	
	public void appendToTail(int d){
		linkedListNode end = new linkedListNode(d);
		linkedListNode node = head;
		while(node.next != null){
			node = node.next;
		}
		node.next = end;
	}
	
	linkedListNode delNode(int d){		//del node with data d
		linkedListNode n = head;
		if(n.data == d){
			return head.next;
		}//nil->1->2->3->nil
		while(n.next != null){
			if(n.next.data == d){
				n.next = n.next.next;
			}
			n.next = n;
		}
		return head;
	} 
	
	public static void main (String[] args){
		linkedList ll = new linkedList();
		ll.head = new linkedListNode(1);
		ll.appendToTail(2);
		linkedListNode nd = ll.head;
		while(nd != null){
		System.out.println(nd.data);
		nd = nd.next;
		}
		}
}
